[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lion_linker"
version = "0.1.0"
description = "A package for entity linking using LionLinker."
authors = [
    {name = "Roberto Avogadro", email = "roberto.avogadro@sintef.no"}
]
urls = {Homepage = "https://github.com/roby-avo/lion_linker"}
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

dependencies = [
    "pandas==2.2.3",
    "requests==2.32.3",
    "ollama==0.3.3",
    "aiohttp==3.10.10",
    "asyncio==3.4.3",
    "tqdm==4.67.0",
    "openai==1.54.4",
    "groq==0.12.0",
    "python-dotenv==1.0.1",
    "jsonargparse==4.37.0",
]

[project.optional-dependencies]
app = [
    "fastapi==0.115",
    "pydantic<3",
    "uvicorn==0.34",
]
dev = [
    "flake8",
    "black",
    "isort",
    "mypy",
]
huggingface = [
    "transformers"
]
tablellama = [
    "transformers==4.34",
    "tokenizers==0.14",
    "protobuf==6.32.0",
    "sentencepiece==0.2.1",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["lion_linker*"]

[tool.setuptools.package-data]
lion_linker = ["prompt/*.txt"]

[project.scripts]
lion-linker = "lion_linker.cli:main"

[tool.ruff]
line-length = 99
# Enable Pyflakes `E` and `F` codes by default.
select = [
  "E",
  "W", # see: https://pypi.org/project/pycodestyle
  "F", # see: https://pypi.org/project/pyflakes
  "I"
]
ignore = [
  "E731", # Do not assign a lambda expression, use a def
  "E402", # Module level import not at top of file
]
# Exclude a variety of commonly ignored directories.
exclude = [".git", "docs", "_notebooks", "examples"]
ignore-init-module-imports = true

# Black formatting
[tool.black]
line_length = 99
include = '\.pyi?$'
exclude = '''
/(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
'''

# iSort
[tool.isort]
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 99
multi_line_output = 3
include_trailing_comma = true
skip_gitignore = true

[tool.mypy]
# -> Level 1# custom settings
show_error_codes = true
ignore_missing_imports = true
plugins = "numpy.typing.mypy_plugin"
# suggested settings# # https://mypy.readthedocs.io/en/stable/existing_code.html?highlight=no_implicit_optional#introduce-stricter-options
# Start off with these
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_optional = true
# this is for reusing same variable with different types
allow_redefinition = true

# -> Level 2# Getting these passing should be easy
strict_equality = true
strict_concatenate = true
# Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

# -> Level 3# These shouldn't be too much additional work, but may be tricky to get passing if you use a lot of untyped libraries
disallow_subclassing_any = false
disallow_untyped_decorators = false
disallow_any_generics = false
disallow_any_unimported = false
# These next few are various gradations of forcing use of type annotationsdisallow_untyped_calls = false
disallow_incomplete_defs = false
disallow_untyped_defs = false

# -> Level 4# This one isn't too hard to get passing, but return on investment is lower
no_implicit_reexport = false
# This one can be tricky to get passing if you use a lot of untyped libraries
warn_return_any = false
